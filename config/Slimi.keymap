#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp N0      &kp N1     &kp N2    &kp N3    &kp N4  &kp N5  &kp N6  &kp N7     &kp N8  &kp N9     &kp N0   &kp MINUS      &kp EQUAL                  &kp BSPC   &trans
&kp TAB                &kp Q     &kp W     &kp E   &kp R   &kp T   &kp Y      &kp U   &kp I      &kp O    &kp P          &kp LBKT       &kp RBKT               &trans
&kp CAPS               &kp A     &kp S     &kp D   &kp F   &kp G   &kp H      &kp J   &kp K      &kp L    &kp SEMI       &kp SQT        &kp BSLH    &kp ENTER  &trans
&kp LSHIFT  &kp TILDE  &kp Z     &kp X     &kp C   &kp V   &kp B   &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH                      &kp RSHIFT  &kp UP     &trans
&mo 1       &kp LCTRL  &kp LALT  &kp LGUI                          &kp SPACE                              &kp RIGHT_ALT  &kp RIGHT_GUI  &kp LEFT    &kp DOWN   &kp RIGHT
            >;
        };

        Function_keys {
            bindings = <
&kp ESC    &kp F1     &kp F2    &kp F3    &kp F4  &kp F5  &kp F6  &kp F7     &kp F8  &kp F9     &kp F10  &kp F11   &kp F12              &kp DELETE  &bt BT_SEL 0
&kp TAB               &kp Q     &kp W     &kp E   &kp R   &kp T   &kp Y      &kp U   &kp I      &kp O    &kp P     &kp LBKT  &kp RBKT               &bt BT_SEL 1
&kp CAPS              &kp A     &kp S     &kp D   &kp F   &kp G   &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp APOS  &kp BSLH   &kp ENTER   &bt BT_SEL 2
&kp LSHFT  &kp GRAVE  &kp Z     &kp X     &kp C   &kp V   &kp B   &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH            &kp RSHFT  &kp UP      &bt BT_CLR
&none      &kp LCTRL  &kp LALT  &kp LGUI                          &kp SPACE                              &kp RGUI  &mo 2     &kp LEFT   &kp DOWN    &kp RIGHT
            >;
        };

        Utility {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans
&trans               &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans               &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans
&trans       &trans  &trans  &trans                          &trans                          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
